//
//  DisplayFlashCardInteractor.swift
//  CleanQuiz
//
//  Created by Rod Schmidt on 1/1/17.
//  Copyright (c) 2017 infiniteNIL. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol DisplayFlashCardInteractorInput
{
    func fetchFlashCard(request: DisplayFlashCard.Request.FetchFlashCard)
}

protocol DisplayFlashCardInteractorOutput
{
    func presentFlashCard(response: DisplayFlashCard.Response.FetchFlashCard)
    func presentError(_ error: FlashCardsStoreError)
}

class DisplayFlashCardInteractor: DisplayFlashCardInteractorInput
{
    var output: DisplayFlashCardInteractorOutput!
    var worker = DisplayFlashCardWorker(cardsStore: FlashCardsMemStore())

    private var flashCards: [FlashCard] = [] {
        didSet {
            if flashCards.count > 0 {
                cardIndex = 0
            }
        }
    }
    private var cardIndex: Int?

    var currentCard: FlashCard?
    {
        guard let index = cardIndex else { return nil }
        return flashCards[index]
    }

    // MARK: - Business logic

    func fetchFlashCard(request: DisplayFlashCard.Request.FetchFlashCard)
    {
        // NOTE: Create some Worker to do the work

        worker.fetchFlashCards { (result: FlashCardsStoreResult) in
            switch result {
                case .cards(let cards):
                    flashCards = cards
                    guard let card = currentCard else { return }
                    let response = DisplayFlashCard.Response.FetchFlashCard(card: hideAnswer(card: card))
                    output.presentFlashCard(response: response)

                case .error(let error):
                    output.presentError(error)
            }
        }
    }

    // Create a card with a blank answer so we don't reveal it yet
    private func hideAnswer(card: FlashCard) -> FlashCard
    {
        return FlashCard(question: card.question, answer: "???")
    }

    func displayNextFlashCard(request: DisplayFlashCard.Request.DisplayNextFlashCard)
    {
    }

    func revealAnswer(request: DisplayFlashCard.Request.RevealAnswer)
    {
    }
}
